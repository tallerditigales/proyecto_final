
			MOV		r0,#0   		
			MOV		r2,#0 		
			MOV		r3,#0			
			MOV		r4,#0xFF000000
			ADD		r4,r4,#0x24
			mov		r7,#0x00FF0000
			
			
			
			
find_cycle:
			
			LDR		r1,[r0]
			str		r1,[r0, #100]
			
			CMP		r1,#0xFF		
			BEQ		fin
			
			
			CMP		r1,#32
			BEQ		space
			
			
			CMP		r1,#65		
			BEQ		vowel
			CMP		r1,#69		
			BEQ		vowel
			CMP		r1,#73		
			BEQ		vowel
			CMP		r1,#79		
			BEQ		vowel
			CMP		r1,#85		
			BEQ		vowel
			CMP		r1,#97		
			BEQ		vowel
			CMP		r1,#101		
			BEQ		vowel
			CMP		r1,#105		
			BEQ		vowel
			CMP		r1,#111		
			BEQ		vowel
			CMP		r1,#117		
			BEQ		vowel
			
			
			ADD		r0,r0,#4
			
			
			B		find_cycle
			
vowel:
			
			ADD		r3,r3,#1
			
			
			ADD		r0,r0,#4
			
			
			CMP		r3,#3
			BEQ		set_pointer
			
			
			B		find_cycle
			
			
			
			
			
set_pointer:
			MOV		r0,r2
			
replace_cycle:
			
			LDR		r1,[r0]
			
			//add		r1,r1,r7
			str		r1,[r0, #100]
			
			CMP		r1,#0xFF		
			BEQ		fin
			
			
			CMP		r1,#32
			BEQ		space
			
			
			CMP		r1,#65		
			BEQ		replace
			CMP		r1,#69		
			BEQ		replace
			CMP		r1,#73		
			BEQ		replace
			CMP		r1,#79		
			BEQ		replace
			CMP		r1,#85		
			BEQ		replace
			CMP		r1,#97		
			BEQ		replace
			CMP		r1,#101		
			BEQ		replace
			CMP		r1,#105		
			BEQ		replace
			CMP		r1,#111		
			BEQ		replace
			CMP		r1,#117		
			BEQ		replace
			
			
			str		r1,[r0, #100]
			
			
			ADD		r0,r0,#4
			
			
			B		replace_cycle
			
			
replace:		
			
			STR		r4, [r0, #100]
			
			
			ADD		r0,r0,#4
			
			
			B		replace_cycle
			
space:		
			ADD		r0,r0,#4
			

			MOV		r2,r0
			
			MOV		r3,#0
			
			B		find_cycle
			
fin:		
