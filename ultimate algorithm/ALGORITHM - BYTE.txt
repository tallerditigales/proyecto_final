.global _start
_start:
	
			mov		r1, #0x400	
			mov		r2, #0		
			mov		r3, #0xFF		
			
ciclo:	
			
			STRB	r3, [r1,r2]
			add		r2,r2,#1
			cmp		r2,r1
			
			bne		ciclo
			
			mov		r3, #69
			STRB		r3, [r1]
			
			mov		r3, #76
			STRB		r3, [r1,#1]
			
			mov		r3, #32
			STRB		r3, [r1,#2]
			
			mov		r3, #67
			STRB		r3, [r1,#3]
			
			mov		r3, #85
			STRB		r3, [r1,#4]
			
			mov		r3, #65
			STRB		r3, [r1,#5]
			
			mov		r3, #68
			STRB		r3, [r1,#6]
			
			mov		r3, #69
			STRB		r3, [r1,#7]
			
			mov		r3, #82
			STRB		r3, [r1,#8]
			
			mov		r3, #78
			STRB		r3, [r1,#9]
			
			mov		r3, #79
			STRB		r3, [r1,#10]
			
			mov		r3, #32
			STRB		r3, [r1,#11]
			
			mov		r3, #65
			STRB	r3, [r1,#12]
			
			mov		r3, #77
			STRB	r3, [r1,#13]
			
			mov		r3, #65
			STRB	r3, [r1,#14]
			
			mov		r3, #82
			STRB	r3, [r1,#15]
			
			mov		r3, #73
			STRB	r3, [r1,#16]
			
			mov		r3, #76
			STRB	r3, [r1,#17]
			
			mov		r3, #76
			STRB	r3, [r1,#18]
			
			mov		r3, #79
			STRB	r3, [r1,#19]
			
			
			
start:
			mov 	r0,#0
			mov		r1,#0x400   
			mov		r3,#0x400
			mov		r4,#0
			mov		r5,#36		
			
find_cycle:
			
			LDRB	r2,[r1]

			CMP		r2,#0xFF	
			BEQ		fin
			
			
			CMP		r2,#32
			BEQ		space
			
			
			CMP		r2,#65		
			BEQ		vowel
			CMP		r2,#69		
			BEQ		vowel
			CMP		r2,#73		
			BEQ		vowel
			CMP		r2,#79		
			BEQ		vowel
			CMP		r2,#85		
			BEQ		vowel
			CMP		r2,#97		
			BEQ		vowel
			CMP		r2,#101		
			BEQ		vowel
			CMP		r2,#105		
			BEQ		vowel
			CMP		r2,#111		
			BEQ		vowel
			CMP		r2,#117		
			BEQ		vowel

			ADD		r1,r1,#1

			B		find_cycle
			
vowel:
			
			ADD		r4,r4,#1
			ADD		r1,r1,#1

			CMP		r4,#3
			BEQ		set_pointer

			B		find_cycle
			
set_pointer:	
			MOV		r1,r3
			
replace_cycle:
			
			LDRB	r2,[r1]
			
			CMP		r2,#0xFF		
			BEQ		fin
			
			CMP		r2,#32
			BEQ		space
			
			CMP		r2,#65		
			BEQ		replace
			CMP		r2,#69		
			BEQ		replace
			CMP		r2,#73		
			BEQ		replace
			CMP		r2,#79		
			BEQ		replace
			CMP		r2,#85		
			BEQ		replace
			CMP		r2,#97		
			BEQ		replace
			CMP		r2,#101		
			BEQ		replace
			CMP		r2,#105		
			BEQ		replace
			CMP		r2,#111		
			BEQ		replace
			CMP		r2,#117		
			BEQ		replace
			
			ADD		r1,r1,#1
			B		replace_cycle
			
			
replace:		
			STRB	r5, [r1]
			ADD		r1,r1,#1
			B		replace_cycle
			
space:		
			ADD		r1,r1,#1
			MOV		r3,r1
			MOV		r4,#0
			B		find_cycle
			
fin:
