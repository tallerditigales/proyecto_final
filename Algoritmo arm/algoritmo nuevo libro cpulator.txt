.global _start
_start:
			sub		r9, r15,r15
			
			add		r0, r9, #0x400	
			//mov		r0, #0x400	
			
			
			add		r1, r9, #0	
			//mov		r1, #0		
			
			
			add		r2, r9, #0xFF
			//mov		r2, #0xFF		
			
			
			add		r10, r9, #0
			//mov		r10, #0
			
ciclo:	
			
			str		r2, [r0,r1]
			add		r1,r1,#4
			subs	r10,r1,r0
			//cmp		r1,r0
			
			bne		ciclo
			
			add		r2, r9, #69
			//mov		r2, #69
			str		r2, [r0]
			
			add		r2, r9, #76
			//mov		r2, #76
			str		r2, [r0,#4]
			
			add		r2, r9, #32
			//mov		r2, #32
			str		r2, [r0,#8]
			
			add		r2, r9, #67
			//mov		r2, #67
			
			
			str		r2, [r0,#12]
			
			
			add		r2, r9, #85
			//mov		r2, #85
			str		r2, [r0,#16]
			
			add		r2, r9, #65
			//mov		r2, #65
			str		r2, [r0,#20]
			
			add		r2, r9, #68
			//mov		r2, #68
			str		r2, [r0,#24]
			
			add		r2, r9, #69
			//mov		r2, #69
			str		r2, [r0,#28]
			
			add		r2, r9, #82
			//mov		r2, #82
			str		r2, [r0,#32]
			
			mov		r2, #78
			str		r2, [r0,#36]
			
			
			add		r2, r9, #79
			//mov		r2, #79
			str		r2, [r0,#40]
			
			add		r2,r9,#32
			//mov		r2, #32
			str		r2, [r0,#44]
			
			add		r2,r9,#65
			//mov		r2, #65
			str		r2, [r0,#48]
			
			add		r2,r9,#77
			//mov		r2, #77
			str		r2, [r0,#52]
			
			mov		r2, #65
			str		r2, [r0,#56]
			
			add		r2,r9,#82
			//mov		r2, #82
			str		r2, [r0,#60]
			
			add		r2,r9,#73
			//mov		r2, #73
			str		r2, [r0,#64]
			
			add		r2,r9,#76
			//mov		r2, #76
			str		r2, [r0,#68]
			
			add		r2,r9,#76
			//mov		r2, #76
			str		r2, [r0,#72]
			
			add		r2,r9,#79
			//mov		r2, #79
			str		r2, [r0,#76]
			
		
			
start:
			add		r0,r9,#0x400   
			//MOV		r0,#0x400  
			add		r2,r9,#0x400
			//MOV		r2,#0x400 
			add		r3,r9,#0
			//MOV		r3,#0
			add		r4,r9,#36
			//MOV		r4,#36			
			
			
			
find_cycle:
			
			LDR		r1,[r0]
			
			
			subs	r10,r1,#0xFF		
			BEQ		fin
			
			
			subs	r10,r1,#32
			BEQ		space
			
			
			subs	r10,r1,#65	
			BEQ		vowel
			subs	r10,r1,#69	
			BEQ		vowel
			subs	r10,r1,#73		
			BEQ		vowel
			subs	r10,r1,#79		
			BEQ		vowel
			subs	r10,r1,#85		
			BEQ		vowel
			subs	r10,r1,#97		
			BEQ		vowel
			subs	r10,r1,#101		
			BEQ		vowel
			subs	r10,r1,#105		
			BEQ		vowel
			subs	r10,r1,#111		
			BEQ		vowel
			subs	r10,r1,#117		
			BEQ		vowel
			
			
			ADD		r0,r0,#4
			
			
			B		find_cycle
			
vowel:
			
			ADD		r3,r3,#1
			
			
			ADD		r0,r0,#4
			
			
			subs	r10,r3,#3
			BEQ		set_pointer
			
			
			B		find_cycle
			
			
			
			
			
set_pointer:
			add		r0,r9,r2
			//MOV		r0,r2
			
replace_cycle:
			
			LDR		r1,[r0]
			
			
			subs	r10,r1,#0xFF		
			BEQ		fin
			
			
			subs	r10,r1,#32
			BEQ		space
			
			
			subs	r10,r1,#65		
			BEQ		replace
			subs	r10,r1,#69		
			BEQ		replace
			subs	r10,r1,#73		
			BEQ		replace
			subs	r10,r1,#79		
			BEQ		replace
			subs	r10,r1,#85		
			BEQ		replace
			subs	r10,r1,#97		
			BEQ		replace
			subs	r10,r1,#101		
			BEQ		replace
			subs	r10,r1,#105		
			BEQ		replace
			subs	r10,r1,#111		
			BEQ		replace
			subs	r10,r1,#117		
			BEQ		replace
			
			
			ADD		r0,r0,#4
			
			
			B		replace_cycle
			
			
replace:		
			STR		r4, [r0]
			
			
			ADD		r0,r0,#4
			
			
			B		replace_cycle
			
space:		
			ADD		r0,r0,#4
			
			add		r2,r9,r0
			//MOV		r2,r0
			
			add		r3,r9,#0
			//MOV		r3,#0
			
			
			B		find_cycle
			
fin:		
